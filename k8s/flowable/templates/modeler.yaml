{{- if .Values.modeler.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "flowable.template" . }}
  labels:
    {{ include "flowable.defaultlabels" . }}
spec:
  replicas: {{ .Values.modeler.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "flowable.template" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "flowable.template" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      initContainers:
      - name: check-db-ready
        image: postgres:9.6.5
        command: ['sh', '-c', 'until pg_isready -h {{ .Values.postgres.service.name }} -p 5432; do echo waiting for database; sleep 2; done;']
      containers:
      - name: {{ include "flowable.template" . }}
        image: "{{ .Values.modeler.image.repository }}:{{ .Values.modeler.image.tag }}"
        imagePullPolicy: {{ .Values.modeler.image.pullPolicy }}
        ports:
        - containerPort: 8888
        readinessProbe:
          httpGet:
            path: /actuator/health
            port: 8888
            httpHeaders:
            - name: Authorization
              value: Basic YWRtaW46dGVzdA==
          initialDelaySeconds: 60
          timeoutSeconds: 5
        livenessProbe:
          httpGet:
            path: /actuator/health
            port: 8888
            httpHeaders:
            - name: Authorization
              value: Basic YWRtaW46dGVzdA==
          initialDelaySeconds: 60
          timeoutSeconds: 10
          failureThreshold: 10
        envFrom:
        - configMapRef:
            name: {{ include "flowable.template" . }}-configmap
        volumeMounts:
        resources:
{{ toYaml .Values.modeler.resources | indent 10 }}
      restartPolicy: Always
      volumes:
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.modeler.service.name }}
  labels:
    {{ include "flowable.defaultlabels" . }}
spec:
  clusterIP: None
  selector:
    app.kubernetes.io/name: {{ include "flowable.template" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
  ports:
  - name: http
    protocol: TCP
    port: 8888
    targetPort: 8888
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "flowable.template" . }}-configmap
data:
  JAVA_OPTS: "{{ .Values.modeler.javaOpts }} -Djava.security.egd=file:/dev/./urandom"
  SERVER_SERVLET_CONTEXT_PATH: {{ .Values.modeler.contextUrl | quote }}
  SERVER_SERVLET_SESSION_TIMEOUT: 1h
  SPRING_DATASOURCE_DRIVER-CLASS-NAME: org.postgresql.Driver
  SPRING_DATASOURCE_URL: jdbc:postgresql://{{ .Values.postgres.service.name }}:5432/{{ .Values.flowable.database.name }}
  SPRING_DATASOURCE_USERNAME: {{ .Values.flowable.database.username }}
  SPRING_DATASOURCE_PASSWORD: {{ .Values.flowable.database.password }}
  FLOWABLE_MODELER_APP_DEPLOYMENT-API-URL: http://{{ .Values.task.service.name }}:9999/app-api
  FLOWABLE_COMMON_APP_IDM-URL: http://{{ .Values.idm.service.name }}:8080
  FLOWABLE_COMMON_APP_IDM-REDIRECT-URL: http://localhost/flowable-idm/
  FLOWABLE_COMMON_APP_REDIRECT-ON-AUTH-SUCCESS: http://localhost/flowable-modeler/
  FLOWABLE_COMMON_APP_IDM-ADMIN_USER: admin
  FLOWABLE_COMMON_APP_IDM-ADMIN_PASSWORD: test
{{- end }}